.Boton.svelte-15f3err{background-color:#72A6AA;padding-left:3rem;border:none;padding:0.5rem 1rem}.Boton.Redondo.svelte-15f3err{border-radius:2rem}
@media screen and (min-width:768px){.ProyectoDetalle.svelte-1je5iat{display:grid;grid-template-columns:1fr 1fr;background:#FFFFFF;border:0.5px solid #72A6AA;box-sizing:border-box}.Imagen.svelte-1je5iat{width:100%;height:20rem;object-fit:cover}.ProyectoDetalle+section.svelte-1je5iat ul.svelte-1je5iat,.ProyectoDetalle+section+section.svelte-1je5iat ul.svelte-1je5iat{display:flex;flex-direction:row !important;justify-content:space-evenly;flex-wrap:wrap;height:auto}}.contenedor-1.svelte-1je5iat{padding:0 2rem}.contenedor-1.svelte-1je5iat header.svelte-1je5iat{position:relative}.contenedor-1.svelte-1je5iat .Regresar.svelte-1je5iat{margin-left:-3rem}.contenedor-2.svelte-1je5iat footer.svelte-1je5iat{margin-top:1rem}.Subtitulo.svelte-1je5iat{text-align:center}.Titulo.svelte-1je5iat{font-weight:bold;font-size:40px;line-height:48px}.Contenido.svelte-1je5iat{width:80%;font-weight:200;font-size:16px;line-height:22px;left:15px;margin:25px}.Proyecto.svelte-1je5iat{left:23px}ul.svelte-1je5iat{margin-bottom:30px;margin-top:25px}section.svelte-1je5iat{margin:0}.SubProyectos.svelte-1je5iat{margin-top:3em}.Similares.svelte-1je5iat{margin-top:3em}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */