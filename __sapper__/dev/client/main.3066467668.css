@import url('https://fonts.googleapis.com/css?family=Fira+Sans:300,400,500,600,700&display=swap');
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
@media screen and (min-width: 768px ){.Inicio.svelte-17f2o9a{min-height:100%;display:grid;grid-template-columns:1fr 2fr}}.Titulo.svelte-17f2o9a{color:#72A6AA;font-weight:500;font-size:28px}.Lateral.svelte-17f2o9a{color:#000;height:100vh;max-width:260px;background-color:rgb(255, 255, 255);padding:2rem}.Introduccion.svelte-17f2o9a{font-weight:200;font-size:14px;line-height:17px}.Subtitulo.svelte-17f2o9a{font-weight:500;font-size:12px;line-height:14px}.contenedor-principal.svelte-17f2o9a{height:100vh;overflow-y:auto;overflow-x:hidden;padding:0}@media screen and (min-width: 768px ){.Lista.svelte-17f2o9a,.Lista.svelte-17f2o9a ul.svelte-17f2o9a{height:auto;padding-bottom:5%}.Lista.svelte-17f2o9a ul.svelte-17f2o9a{padding:0 1rem;display:grid;grid-template-columns:1fr 1fr;grid-gap:2rem}}@media screen and (min-width: 1200px ){.Lista.svelte-17f2o9a ul.svelte-17f2o9a{grid-template-columns:1fr 1fr 1fr}}
@media screen and (min-width:768px){.ProyectoDetalle.svelte-1je5iat{display:grid;grid-template-columns:1fr 1fr;background:#FFFFFF;border:0.5px solid #72A6AA;box-sizing:border-box}.Imagen.svelte-1je5iat{width:100%;height:20rem;object-fit:cover}.ProyectoDetalle+section.svelte-1je5iat ul.svelte-1je5iat,.ProyectoDetalle+section+section.svelte-1je5iat ul.svelte-1je5iat{display:flex;flex-direction:row !important;justify-content:space-evenly;flex-wrap:wrap;height:auto}}.contenedor-1.svelte-1je5iat{padding:0 2rem}.contenedor-1.svelte-1je5iat header.svelte-1je5iat{position:relative}.contenedor-1.svelte-1je5iat .Regresar.svelte-1je5iat{margin-left:-3rem}.contenedor-2.svelte-1je5iat footer.svelte-1je5iat{margin-top:1rem}.Subtitulo.svelte-1je5iat{text-align:center}.Titulo.svelte-1je5iat{font-weight:bold;font-size:40px;line-height:48px}.Contenido.svelte-1je5iat{width:80%;font-weight:200;font-size:16px;line-height:22px;left:15px;margin:25px}.Proyecto.svelte-1je5iat{left:23px}ul.svelte-1je5iat{margin-bottom:30px;margin-top:25px}section.svelte-1je5iat{margin:0}.SubProyectos.svelte-1je5iat{margin-top:3em}.Similares.svelte-1je5iat{margin-top:3em}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
article.svelte-1xnyiy6{max-width:320px}.Imagen.svelte-1xnyiy6{width:100%;height:12rem;object-fit:cover}.Texto.svelte-1xnyiy6{padding:1rem;font-style:normal;color:#000}a.svelte-1xnyiy6{text-decoration:none;color:#000}.Tarjeta.svelte-1xnyiy6{background:#FFFFFF;mix-blend-mode:normal;box-shadow:0px 5px 15px rgba(0, 0, 0, 0.2);border-radius:3px}.Texto.svelte-1xnyiy6 .Titulo.svelte-1xnyiy6{font-weight:500;font-size:var(--TextoMediano--font-size);line-height:var(--TextoMediano--line-height)}.Texto.svelte-1xnyiy6 .Extracto.svelte-1xnyiy6{font-weight:300;font-size:var(--TextoChico--font-size);line-height:var(--TextoChico--line-height)}
.Boton.svelte-15f3err{background-color:#72A6AA;padding-left:3rem;border:none;padding:0.5rem 1rem}.Boton.Redondo.svelte-15f3err{border-radius:2rem}
.Pie.svelte-1shpazl{width:100%;background-color:#F0F0F0;display:grid;grid-template-columns:70% 30%}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */