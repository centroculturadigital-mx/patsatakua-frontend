@import url('https://fonts.googleapis.com/css?family=Fira+Sans:300,400,500,600,700&display=swap');
h1.svelte-13vgy2g,p.svelte-13vgy2g{margin:0 auto}h1.svelte-13vgy2g{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-13vgy2g{margin:1em auto}@media(min-width: 480px){h1.svelte-13vgy2g{font-size:4em}}
@media screen and (min-width: 768px ){.Inicio.svelte-osmlqx{min-height:100%;display:grid;grid-template-columns:1fr 2fr}}.Titulo.svelte-osmlqx{color:#72A6AA;font-weight:500;font-size:28px}.Lateral.svelte-osmlqx{color:#000;height:100vh;max-width:260px;background-color:rgb(255, 255, 255);padding:2rem}.Introduccion.svelte-osmlqx{font-weight:200;font-size:14px;line-height:17px}.Subtitulo.svelte-osmlqx{font-weight:500;font-size:12px;line-height:14px}.contenedor-principal.svelte-osmlqx{height:100vh;overflow-y:auto;overflow-x:hidden;padding:0}.contenedor-principal.svelte-osmlqx .Pie.svelte-osmlqx{width:100%;padding:2rem;background-color:#F0F0F0;display:grid}.TextoPie.svelte-osmlqx{font-size:0.8rem;padding:1rem;width:70%;border-right-style:solid;border-right-color:#c4c4c4;border-right-width:1px}.LogosPie.svelte-osmlqx{width:30%;padding:1rem;display:flex;justify-content:space-evenly}@media screen and (min-width: 768px ){.Lista.svelte-osmlqx,.Lista.svelte-osmlqx ul.svelte-osmlqx{height:auto;padding-bottom:5%}.Lista.svelte-osmlqx ul.svelte-osmlqx{padding:0 1rem;display:grid;grid-template-columns:1fr 1fr;grid-gap:2rem}}@media screen and (min-width: 1200px ){.Lista.svelte-osmlqx ul.svelte-osmlqx{grid-template-columns:1fr 1fr 1fr}}
ul.svelte-1she90c{margin:0 0 1em 0;line-height:1.5}
.content.svelte-dkhkxh h2{font-size:1.4em;font-weight:500}.content.svelte-dkhkxh pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-dkhkxh pre code{background-color:transparent;padding:0}.content.svelte-dkhkxh ul{line-height:1.5}.content.svelte-dkhkxh li{margin:0 0 0.5em 0}
@media screen and (min-width:768px){.ProyectoDetalle.svelte-h5rbn0{display:grid;grid-template-columns:1fr 1fr;background:#FFFFFF;border:0.5px solid #72A6AA;box-sizing:border-box}.Imagen.svelte-h5rbn0{width:100%;height:20rem;object-fit:cover}.ProyectoDetalle+section.svelte-h5rbn0 ul.svelte-h5rbn0,.ProyectoDetalle+section+section.svelte-h5rbn0 ul.svelte-h5rbn0{display:flex;flex-direction:row !important;justify-content:space-evenly;flex-wrap:wrap;height:auto}}.contenedor-1.svelte-h5rbn0{padding:0 2rem}.contenedor-1.svelte-h5rbn0 header.svelte-h5rbn0{position:relative}.contenedor-1.svelte-h5rbn0 .Regresar.svelte-h5rbn0{margin-left:-3rem}.contenedor-2.svelte-h5rbn0 footer.svelte-h5rbn0{margin-top:1rem}footer.svelte-h5rbn0 div.svelte-h5rbn0{display:flex;width:100%;justify-content:space-evenly}footer.svelte-h5rbn0 article.svelte-h5rbn0{width:auto;padding:3rem}.Subtitulo.svelte-h5rbn0{text-align:center}.Titulo.svelte-h5rbn0{font-weight:bold;font-size:40px;line-height:48px}.Contenido.svelte-h5rbn0{width:80%;font-weight:200;font-size:16px;line-height:22px;left:15px;margin:25px}.Proyecto.svelte-h5rbn0{left:23px}ul.svelte-h5rbn0{margin-bottom:30px;margin-top:25px}section.svelte-h5rbn0{margin:0}.SubProyectos.svelte-h5rbn0{margin-top:3em}.Similares.svelte-h5rbn0{margin-top:3em}
article.svelte-13o2xd{max-width:320px}.Imagen.svelte-13o2xd{width:100%;height:12rem;object-fit:cover}.Texto.svelte-13o2xd{padding:1rem;font-style:normal;color:#000}a.svelte-13o2xd{text-decoration:none;color:#000}.Tarjeta.svelte-13o2xd{background:#FFFFFF;mix-blend-mode:normal;box-shadow:0px 5px 15px rgba(0, 0, 0, 0.2);border-radius:3px}.Texto.svelte-13o2xd .Titulo.svelte-13o2xd{font-weight:500;font-size:var(--TextoMediano--font-size);line-height:var(--TextoMediano--line-height)}.Texto.svelte-13o2xd .Extracto.svelte-13o2xd{font-weight:300;font-size:var(--TextoChico--font-size);line-height:var(--TextoChico--line-height)}
.Boton.svelte-1ithnmr{background-color:#72A6AA;padding-left:3rem;border:none;padding:0.5rem 1rem}.Boton.Redondo.svelte-1ithnmr{border-radius:2rem}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */